<?php

namespace AdminBundle\Repository;

use AppBundle\Repository\BaseRepository;
use AppBundle\Util\Pagination;
use Pagerfanta\Adapter\DoctrineORMAdapter;
use Pagerfanta\Pagerfanta;

/**
 * VideoRepository
 *
 * This class was generated by the PhpStorm "Php Annotations" Plugin. Add your own custom
 * repository methods below.
 */
class VideoRepository extends BaseRepository
{
    protected function queryLatest(Pagination $pagination)
    {
        $routeParams = $pagination->getRouteParams();

        $qb = $this->createQueryBuilder('v');

        if (isset($routeParams['search'])) {
            $qb->andWhere(
                $qb->expr()->like('v.description', ':search')
            )->setParameter('search', '%'.$routeParams['search'].'%');
        }

        if ( ! empty($routeParams['enabled'])) {
            $qb->andWhere('v.isEnabled = 1');
        }

        if ( ! empty($routeParams['publishedOnly'])) {
            $qb->andWhere(':now >= v.publishedAt')->setParameter('now', new \DateTime());
        }

        $qb = $this->addOrderingQueryBuilder($qb, $routeParams);

        return $qb->getQuery();
    }

    public function findLatest(Pagination $pagination)
    {
        $routeParams = $pagination->getRouteParams();

        $paginator = new Pagerfanta(new DoctrineORMAdapter($this->queryLatest($pagination), false));

        $paginator->setMaxPerPage($routeParams['num_items']);
        $paginator->setCurrentPage($routeParams['page']);

        return $paginator;
    }

    public function findLatestPortal(Pagination $pagination)
    {
        $routeParams = $pagination->getRouteParams();

        $routeParams['sorting']       = ['publishedAt' => 'desc'];
        $routeParams['enabled']       = true;
        $routeParams['publishedOnly'] = true;

        $paginator = new Pagerfanta(new DoctrineORMAdapter($this->queryLatest($pagination), false));

        $paginator->setMaxPerPage($routeParams['num_items']);
        $paginator->setCurrentPage($routeParams['page']);

        return $paginator;
    }
}
